# Form implementation generated from reading ui file 'results_screen.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from collections import defaultdict


class Ui_results_window(object):
    def setupUi(self, results_window):
        results_window.setObjectName("results_window")
        results_window.resize(1026, 901)
        results_window.setMinimumSize(QtCore.QSize(1026, 901))
        results_window.setMaximumSize(QtCore.QSize(1026, 901))
        self.centralwidget = QtWidgets.QWidget(parent=results_window)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 10, 1001, 41))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label.setWordWrap(True)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(130, 70, 581, 41))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_2.setWordWrap(True)
        self.label_2.setObjectName("label_2")
        self.line = QtWidgets.QFrame(parent=self.centralwidget)
        self.line.setGeometry(QtCore.QRect(10, 50, 1001, 16))
        self.line.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line.setObjectName("line")
        self.percentage_result = QtWidgets.QLabel(parent=self.centralwidget)
        self.percentage_result.setGeometry(QtCore.QRect(710, 70, 131, 41))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.percentage_result.setFont(font)
        self.percentage_result.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.percentage_result.setWordWrap(True)
        self.percentage_result.setObjectName("percentage_result")
        self.bp_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.bp_label.setGeometry(QtCore.QRect(20, 140, 761, 61))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.bp_label.setFont(font)
        self.bp_label.setObjectName("bp_label")
        self.cholesterol_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.cholesterol_label.setGeometry(QtCore.QRect(20, 190, 761, 61))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.cholesterol_label.setFont(font)
        self.cholesterol_label.setObjectName("cholesterol_label")
        self.blood_sugar_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.blood_sugar_label.setGeometry(QtCore.QRect(20, 240, 761, 61))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.blood_sugar_label.setFont(font)
        self.blood_sugar_label.setObjectName("blood_sugar_label")
        self.line_2 = QtWidgets.QFrame(parent=self.centralwidget)
        self.line_2.setGeometry(QtCore.QRect(10, 120, 1001, 16))
        self.line_2.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_2.setObjectName("line_2")
        self.line_3 = QtWidgets.QFrame(parent=self.centralwidget)
        self.line_3.setGeometry(QtCore.QRect(10, 300, 1001, 16))
        self.line_3.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_3.setObjectName("line_3")
        self.bp_graph_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.bp_graph_button.setGeometry(QtCore.QRect(890, 150, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(10)
        self.bp_graph_button.setFont(font)
        self.bp_graph_button.setObjectName("bp_graph_button")
        self.cholesterol_graph_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.cholesterol_graph_button.setGeometry(QtCore.QRect(890, 200, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(10)
        self.cholesterol_graph_button.setFont(font)
        self.cholesterol_graph_button.setObjectName("cholesterol_graph_button")
        self.blood_sugar_graph_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.blood_sugar_graph_button.setGeometry(QtCore.QRect(890, 250, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(10)
        self.blood_sugar_graph_button.setFont(font)
        self.blood_sugar_graph_button.setObjectName("blood_sugar_graph_button")
        self.label_6 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(10, 320, 1001, 41))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_6.setWordWrap(True)
        self.label_6.setObjectName("label_6")
        self.angina_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.angina_label.setGeometry(QtCore.QRect(20, 380, 761, 61))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.angina_label.setFont(font)
        self.angina_label.setObjectName("angina_label")
        self.line_4 = QtWidgets.QFrame(parent=self.centralwidget)
        self.line_4.setGeometry(QtCore.QRect(10, 370, 1001, 16))
        self.line_4.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_4.setObjectName("line_4")
        self.ecg_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.ecg_label.setGeometry(QtCore.QRect(20, 430, 761, 61))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.ecg_label.setFont(font)
        self.ecg_label.setObjectName("ecg_label")
        self.exercise_angina_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.exercise_angina_label.setGeometry(QtCore.QRect(20, 480, 761, 61))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.exercise_angina_label.setFont(font)
        self.exercise_angina_label.setObjectName("exercise_angina_label")
        self.line_5 = QtWidgets.QFrame(parent=self.centralwidget)
        self.line_5.setGeometry(QtCore.QRect(10, 540, 1001, 16))
        self.line_5.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_5.setObjectName("line_5")
        self.label_7 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(10, 560, 1001, 41))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_7.setWordWrap(True)
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(10, 630, 1001, 41))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_8.setFont(font)
        self.label_8.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_8.setWordWrap(True)
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(10, 710, 1001, 61))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Active, QtGui.QPalette.ColorRole.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Inactive, QtGui.QPalette.ColorRole.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Disabled, QtGui.QPalette.ColorRole.WindowText, brush)
        self.label_9.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_9.setFont(font)
        self.label_9.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_9.setWordWrap(True)
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(10, 790, 1001, 61))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Active, QtGui.QPalette.ColorRole.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Inactive, QtGui.QPalette.ColorRole.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        palette.setBrush(QtGui.QPalette.ColorGroup.Disabled, QtGui.QPalette.ColorRole.WindowText, brush)
        self.label_10.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_10.setFont(font)
        self.label_10.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_10.setWordWrap(True)
        self.label_10.setObjectName("label_10")
        results_window.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=results_window)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1026, 21))
        self.menubar.setObjectName("menubar")
        results_window.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=results_window)
        self.statusbar.setObjectName("statusbar")
        results_window.setStatusBar(self.statusbar)

        self.retranslateUi(results_window)
        QtCore.QMetaObject.connectSlotsByName(results_window)
    
    #function to set label text and color according to given parameters
    def set_label(self, label, key, indicator, library):
        #translation dictionary for metric results
        results_translations = {
            "Good": "Your <FEATURE> is within a generally healthy range, and does not indicate any potential health concerns. Keep up the good work!",
            "Bad": "Your <FEATURE> is outside the generally healthy range. A lifestyle or diet change may be in order." 
        }
        
        #translation dictionary for condition results
        conditions_translations = {
            "angina_label": {
                "Good": "You don't have experience any form of angina. That's great!",
                "Bad": "Any form of angina is a cause for concern. You should speak with your doctor to explore the potential causes and solutions."
            },
            "ecg_label": {
                "Good": "Your ECG results don't indicate any potential health concerns. That's great!",
                "Bad": "Your ECG results is a cause for concern. You should speak with your doctor to explore the potential causes and solutions."
            },
            "exercise_angina_label": {
                "Good": "You don't experience any form of angina induced by exercise. That's great!",
                "Bad": "Angina induced from exercise is a cause for concern. You should speak with your doctor to explore the potential causes and solutions."
            }
        }

        tooltips = {
            "bp_label": "<html><head/><body><p>Lowering blood pressure is normally a matter of diet and exercise. Consider eating less sodium (under 1500mg per day), eating more potassium, being more active, and finding healthy ways to reduce stress. Consuming probiotics may also help, as this has been linked to healthier blood pressure.</p></body></html>",
            "cholesterol_label": "<html><head/><body><p>Several factors control your cholesterol level, and can be mostly fixed with a few changes to your lifestyle. You can reduce consumption of saturated fats (normally found in red meat and full-fat dairy products) and eliminating trans fats (found in several processed foods) from your diet. You can also try exercising more, with at least 30 minutes of vigorous activity per day. If you're a smoker, consider quitting - you can talk to your doctors for successful quitting strategies. If you're already doing what's suggested, then it's possible that your hypercholesterolemia is familial and unlikely to be reduced without medication. Talk to your doctor about this possibility.</p></body></html>",
            "blood_sugar_label": "<html><head/><body><p>Managing blood sugar levels can be done with diet and exercise. Try to manage your carb intake (typically less than 60 grams of carbs per day), eat more soluble fiber (oats, peas, beans, apples, citrus fruits, carrots, etc.), and drink more water. Find healthy ways to manage stress (like yoga or meditation) and try to remain more active during the day.</p></body></html>",
        }

        #use the results translations dictionary
        if library == 0:
            label.setText(results_translations[indicator].replace("<FEATURE>", key))
        else:
            label.setText(conditions_translations[label.objectName()][indicator])
        
        #set the proper color
        label.setStyleSheet("color: green;" if indicator == "Good" else "color: red;")

        #add tooltips if the indicator is bad for a particular label (only applies to blood pressure, cholesterol, and blood sugar)
        if indicator == "Bad" and library == 0:
            label.setToolTip(tooltips[label.objectName()])


    #function to update UI to user results before showing to user
    def update_labels(self, prediction_result, data):
        indicators = defaultdict(lambda: "Bad")

        #list of labels to pass to the set_label function
        labels_list = [(self.bp_label, "blood pressure", 0), (self.cholesterol_label, "cholesterol", 0), (self.blood_sugar_label, "fasting blood sugar", 0), (self.angina_label, "chest pain type", 1), (self.ecg_label, "resting ecg", 1), (self.exercise_angina_label, "exercise angina", 1)]
        
        #set the indicators for the key metrics and conditions
        if data["resting bp s"] <= 120 and data["resting bp s"] >= 90:
            indicators["blood pressure"] = "Good"
        
        if data["cholesterol"] < 200:
            indicators["cholesterol"] = "Good"
        
        if data["fasting blood sugar"] == 0:
            indicators["fasting blood sugar"] = "Good"
        
        if data["chest pain type"] == 4:
            indicators["chest pain type"] = "Good"

        if data["resting ecg"] == 0:
            indicators["resting ecg"] = "Good"
        
        if data["exercise angina"] == 0:
            indicators["exercise angina"] = "Good"
        
        #set the labels to proper text and color, and add tooltip if indicator is red
        for l, k, c in labels_list:
            self.set_label(l, k, indicators[k], c)
        
        #set the label for percentage result and color
        self.percentage_result.setText(f"{prediction_result:.2f} %")
        self.percentage_result.setStyleSheet("color: green;" if prediction_result < 50 else "color: red;")

        self.bp_graph_button.setToolTip("<html><head/><body><p>Your value is highlighted in blue. Patients with CVD are in red, and patients without are in green. The dark green line is the regression of patients without CVD, the dark red is the regression of patients with CVD. In general, you'd like to see your value below the dark green line.</p></body></html>")
        self.cholesterol_graph_button.setToolTip("<html><head/><body><p>Your value is highlighted in blue. Patients with CVD are in red, and patients without are in green. The dark green line is the regression of patients without CVD, the dark red is the regression of patients with CVD. In general, you'd like to see your value below the dark green line.</p></body></html>")
        self.blood_sugar_graph_button.setToolTip("<html><head/><body><p>There are only two values possible in this graph, 0 for lower blood sugar, and 1 for blood sugar higher than 120mg. Ideally you'd want to see your value at the bottom of the graph, where y=0.</p></body></html>")
    def retranslateUi(self, results_window):
        _translate = QtCore.QCoreApplication.translate
        results_window.setWindowTitle(_translate("results_window", "Heart Disease Predictor by S&N Health - Results"))
        self.label.setText(_translate("results_window", "Below are your results. Results highlighted in green are your satisfactory metrics - keep up the good work! Results highlighted in red are your unsatisfactory metrics. You can hover over any red metrics to get information on how to correct them. Next to each metric is a graph to see how you stand amongst the data. For the graphs, you can hover over the button to get an explanation of what you see in the graph."))
        self.label_2.setText(_translate("results_window", "Percentage chance of developing cardiovascular disease (CVD): "))
        self.percentage_result.setText(_translate("results_window", "0 %"))
        self.bp_label.setText(_translate("results_window", "This label is used for a good metric on resting blood pressure."))
        self.cholesterol_label.setText(_translate("results_window", "This label is used for a good metric on cholesterol"))
        self.blood_sugar_label.setText(_translate("results_window", "This label is used for a good metric on fasting blood sugar."))
        self.bp_graph_button.setText(_translate("results_window", "See Graph"))
        self.cholesterol_graph_button.setText(_translate("results_window", "See Graph"))
        self.blood_sugar_graph_button.setText(_translate("results_window", "See Graph"))
        self.label_6.setText(_translate("results_window", "Below are conditions that are cause for concern. For each item, you may hover over it to see potential causes for the condition. For each condition highlighted in red, it is recommended to speak to your doctor about it as soon as you can."))
        self.angina_label.setText(_translate("results_window", "This label is used for chest pain."))
        self.ecg_label.setText(_translate("results_window", "This label is used for resting ECG"))
        self.exercise_angina_label.setText(_translate("results_window", "This label is used for exercise induced angina"))
        self.label_7.setText(_translate("results_window", "The remaining metrics not listed here were strictly for prediction purposes. For those items, there\'s not much you can do to directly affect them as they are normally controlled by other factors."))
        self.label_8.setText(_translate("results_window", "Once you are finished reading your results, you may close this window at any time."))
        self.label_9.setText(_translate("results_window", "THESE RESULTS DO NOT REPLACE AN EVALUATION FROM A LICENSED MEDICAL PROFESSIONAL. THEY ARE ALSO NOT PERFECTLY ACCURATE. RECOMMENDATIONS GIVEN ARE GENERAL AND DO NOT TAKE INTO ACCOUNT YOUR PERSONAL SITUATION AND CIRCUMSTANCES. PLEASE SPEAK TO YOUR DOCTOR IF YOU HAVE ANY CONCERNS OR BEFORE MAKING ANY LIFESTYLE CHANGES."))
        self.label_10.setText(_translate("results_window", "This tool brought to you by S&N Health. Thank you for trusting S&N Health as your provider and for taking this precautionary step towards your health!"))
